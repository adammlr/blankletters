{"version":3,"sources":["components/Letter.jsx","components/PickedLetterDisplay.jsx","components/SelectLetter.jsx","components/Puzzle.jsx","words.js","App.js","serviceWorker.js","index.js"],"names":["LetterContainer","styled","div","props","space","Letter","letter","PickedLetter","PickedLetterDisplay","pickedLetters","map","key","Input","input","SelectLetter","submitLetter","useState","newLetter","setNewLetter","onSubmit","event","preventDefault","toUpperCase","htmlFor","type","onChange","e","target","value","maxLength","autoFocus","name","initalLetters","defaultLetters","Puzzle","word","nextWord","upperWord","setPickedLetters","solved","setSolved","useEffect","every","includes","index","getLetterToDisplay","onClick","things","GlobalStyle","createGlobalStyle","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","setWord","onNextWord","Math","floor","random","length","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"ygBAGA,IAAMA,EAAkBC,IAAOC,IAAV,KAEC,SAAAC,GAAK,OAAKA,EAAMC,MAAQ,QAAU,WAWzC,SAASC,EAAT,GAA6B,IAAXC,EAAU,EAAVA,OAC/B,OACE,kBAACN,EAAD,CAAiBI,MAAkB,MAAXE,GACV,MAAXA,EAAiB,KAAOA,G,sQChB/B,IAAMC,EAAeN,IAAOC,IAAV,KAWH,SAASM,EAAT,GAAiD,IAAlBC,EAAiB,EAAjBA,cAC5C,OACE,6BACGA,EAAcC,KAAI,SAAAJ,GACjB,OAAO,kBAACC,EAAD,CAAcI,IAAKL,GAASA,O,gQChB3C,IAAMM,EAAQX,IAAOY,MAAV,KAWI,SAASC,EAAT,GAAyC,IAAjBC,EAAgB,EAAhBA,aAAgB,EACnBC,mBAAS,IADU,mBAC9CC,EAD8C,KACnCC,EADmC,KASrD,OACE,0BAAMC,SAPR,SAAsBC,GACpBA,EAAMC,iBACNN,EAAaE,EAAUK,eACvBJ,EAAa,MAKX,2BAAOK,QAAQ,cAAf,gBACA,kBAACX,EAAD,CACEY,KAAK,OACLC,SAAU,SAAAC,GACRR,EAAaQ,EAAEC,OAAOC,QAExBA,MAAOX,EACPY,UAAW,EACXC,WAAS,EACTC,KAAK,gBC5Bb,IAAMC,EAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1CC,EAAiB,CAAC,IAAK,IAAK,KAEnB,SAASC,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC/BC,EAAYF,EAAKb,cAD0B,EAEPN,mBAASgB,GAFF,mBAE1CvB,EAF0C,KAE3B6B,EAF2B,OAGrBtB,oBAAS,GAHY,mBAG1CuB,EAH0C,KAGlCC,EAHkC,KAsBjD,OAjBAC,qBAUA,WACmB,YAAIJ,GAAWK,OAAM,SAAApC,GACpC,MAAO,sBAAIG,GAAkBwB,GAAgBU,SAASrC,OAE5CkC,GAAU,KAdD,CAAC/B,IACxBgC,qBAAU,WACRD,GAAU,GACVF,EAAiBN,KAChB,CAACG,IAcF,6BACE,6BACG,YAAIE,GAAW3B,KAAI,SAACJ,EAAQsC,GAC3B,OACE,kBAACvC,EAAD,CACEM,IAAKiC,EACLtC,OAAQuC,EAAmBvC,EAAD,sBACrBG,GACAwB,UAOb,kBAACzB,EAAD,CAAqBC,cAAeA,KAClC8B,GAAU,kBAACzB,EAAD,CAAcC,aA5B9B,SAAyBE,GACvBqB,EAAiB,GAAD,mBAAK7B,GAAL,CAAoBQ,QA4BjC,4BAAQ6B,QAASV,GAAjB,cAKP,SAASS,EAAmBvC,EAAQG,GAClC,MAAe,MAAXH,EACK,IAELG,EAAckC,SAASrC,GAClBA,EAEF,IC5DF,IAAMyC,EAAS,CACpB,mBACA,8BACA,mBACA,gBACA,kBACA,gBACA,uBACA,YACA,kBACA,iBACA,uBACA,2BACA,0BACA,oBACA,gBACA,mBACA,0BACA,cACA,gBACA,qBACA,0BACA,wBACA,gBACA,oBACA,uBACA,mBACA,0BACA,iBACA,mBACA,yBACA,mBACA,aACA,0BACA,qBACA,mBACA,mBACA,iBACA,aACA,iBACA,iBACA,cACA,eACA,YACA,wBACA,yBACA,oBACA,iBACA,0BACA,oBACA,mBACA,cACA,wBACA,qBACA,uBACA,eACA,4BACA,wBACA,sBACA,sBACA,gBACA,oBACA,wBACA,cACA,yBACA,mBACA,yBACA,yBACA,kBACA,6BACA,qBACA,sBACA,mBACA,wBACA,8BACA,uBACA,yBACA,sBACA,+BACA,e,+GC1EF,IAAMC,EAAcC,YAAH,KCOjB,IAAMC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC3FjEC,IAASC,OAAO,mBFMD,WAAgB,IAAD,EACJ7D,mBAAS,IADL,mBACrBmB,EADqB,KACf2C,EADe,KAM5B,SAASC,IACPD,EAAQ/B,EAAOiC,KAAKC,MAAMD,KAAKE,SAAWnC,EAAOoC,UAGnD,OARA1C,qBAAU,WACRsC,MACC,IAOD,6BACE,kBAAC/B,EAAD,MACA,kBAACd,EAAD,CAAQC,KAAMA,EAAMC,SAAU2C,OEnBpB,MAASK,SAASC,eAAe,SDiB1C,SAAkB3B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI2B,IAAIC,gBAAwBnC,OAAOC,SAASmC,MACpDC,SAAWrC,OAAOC,SAASoC,OAIvC,OAGFrC,OAAOsC,iBAAiB,QAAQ,WAC9B,IAAMjC,EAAK,UAAM8B,gBAAN,sBAEPrC,IAgEV,SAAiCO,EAAOC,GAEtCiC,MAAMlC,EAAO,CACXmC,QAAS,CAAE,iBAAkB,YAE5B9B,MAAK,SAAA+B,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CtC,UAAUC,cAAcsC,MAAMpC,MAAK,SAAAC,GACjCA,EAAaoC,aAAarC,MAAK,WAC7BV,OAAOC,SAAS+C,eAKpB5C,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFA8B,CAAwB5C,EAAOC,GAI/BC,UAAUC,cAAcsC,MAAMpC,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OCxC/BE,K","file":"static/js/main.7776fd3a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst LetterContainer = styled.div`\r\n  display: inline-block;\r\n  border: solid 1px ${props => (props.space ? \"white\" : \"black\")};\r\n  background-color: white;\r\n  font-size: 24px;\r\n  width: 20px;\r\n  height: 30px;\r\n  text-align: center;\r\n  margin: 2px;\r\n  vertical-align: middle;\r\n  font-family: \"Source Code Pro\";\r\n`;\r\n\r\nexport default function Letter({ letter }) {\r\n  return (\r\n    <LetterContainer space={letter === \" \"}>\r\n      {letter === \"_\" ? null : letter}\r\n    </LetterContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PickedLetter = styled.div`\r\n  display: inline-block;\r\n  border: solid 1px #ddd;\r\n  background-color: white;\r\n  font-size: 18px;\r\n  width: 18px;\r\n  text-align: center;\r\n  margin: 2px;\r\n  font-family: \"Source Code Pro\";\r\n`;\r\n\r\nexport default function PickedLetterDisplay({ pickedLetters }) {\r\n  return (\r\n    <div>\r\n      {pickedLetters.map(letter => {\r\n        return <PickedLetter key={letter}>{letter}</PickedLetter>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nconst Input = styled.input`\r\n  display: inline-block;\r\n  border: solid 2px #333;\r\n  background-color: #ddd;\r\n  font-size: 18px;\r\n  width: 18px;\r\n  text-align: center;\r\n  margin: 2px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport default function SelectLetter({ submitLetter }) {\r\n  const [newLetter, setNewLetter] = useState(\"\");\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    submitLetter(newLetter.toUpperCase());\r\n    setNewLetter(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"nextLetter\">Next Letter:</label>\r\n      <Input\r\n        type=\"text\"\r\n        onChange={e => {\r\n          setNewLetter(e.target.value);\r\n        }}\r\n        value={newLetter}\r\n        maxLength={1}\r\n        autoFocus\r\n        name=\"nextLetter\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Letter from \"./Letter\";\r\nimport PickedLetterDisplay from \"./PickedLetterDisplay\";\r\nimport SelectLetter from \"./SelectLetter\";\r\n\r\nconst initalLetters = [\"R\", \"S\", \"T\", \"L\", \"N\", \"E\"];\r\nconst defaultLetters = [\" \", \"-\", \"&\"];\r\n\r\nexport default function Puzzle({ word, nextWord }) {\r\n  const upperWord = word.toUpperCase();\r\n  const [pickedLetters, setPickedLetters] = useState(initalLetters);\r\n  const [solved, setSolved] = useState(false);\r\n\r\n  useEffect(checkSolved, [pickedLetters]);\r\n  useEffect(() => {\r\n    setSolved(false);\r\n    setPickedLetters(initalLetters);\r\n  }, [word]);\r\n\r\n  function handleNewLetter(newLetter) {\r\n    setPickedLetters([...pickedLetters, newLetter]);\r\n  }\r\n\r\n  function checkSolved() {\r\n    const isSolved = [...upperWord].every(letter => {\r\n      return [...pickedLetters, ...defaultLetters].includes(letter);\r\n    });\r\n    isSolved && setSolved(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {[...upperWord].map((letter, index) => {\r\n          return (\r\n            <Letter\r\n              key={index}\r\n              letter={getLetterToDisplay(letter, [\r\n                ...pickedLetters,\r\n                ...defaultLetters\r\n              ])}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <PickedLetterDisplay pickedLetters={pickedLetters} />\r\n      {!solved && <SelectLetter submitLetter={handleNewLetter} />}\r\n      {<button onClick={nextWord}>New Word!</button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getLetterToDisplay(letter, pickedLetters) {\r\n  if (letter === \" \") {\r\n    return \" \";\r\n  }\r\n  if (pickedLetters.includes(letter)) {\r\n    return letter;\r\n  }\r\n  return \"_\";\r\n}\r\n","export const things = [\r\n  \"Active Volcanoes\",\r\n  \"Beach Chair With Side Table\",\r\n  \"Biceps & Triceps\",\r\n  \"Big Blue Eyes\",\r\n  \"Bits And Pieces\",\r\n  \"Bold Measures\",\r\n  \"Bonuses & Incentives\",\r\n  \"Buzzwords\",\r\n  \"Canvas Sneakers\",\r\n  \"Car Cupholders\",\r\n  \"Cars Trucks And Vans\",\r\n  \"Castle Moat & Drawbridge\",\r\n  \"Casual T-Shirts & Pants\",\r\n  \"Champagne Bubbles\",\r\n  \"Chubby Cheeks\",\r\n  \"Clocks & Watches\",\r\n  \"Coloring Book & Crayons\",\r\n  \"Comic Books\",\r\n  \"Complex Carbs\",\r\n  \"Congested Freeways\",\r\n  \"Daily & Weekly Calendar\",\r\n  \"Day & Evening Classes\",\r\n  \"Electric Cars\",\r\n  \"Employee Benefits\",\r\n  \"Fiction & Nonfiction\",\r\n  \"Fingers And Toes\",\r\n  \"Foot- Massaging Sandals\",\r\n  \"Fuel Additives\",\r\n  \"Funny Quotations\",\r\n  \"Fur-Lined Winter Boots\",\r\n  \"Giant Sand Dunes\",\r\n  \"Golf Shoes\",\r\n  \"Granite & Marble Floors\",\r\n  \"Hamburger Wrappers\",\r\n  \"Hammer And Nails\",\r\n  \"Handbags & Shoes\",\r\n  \"Hidden Talents\",\r\n  \"High Hopes\",\r\n  \"Homemade Gifts\",\r\n  \"Honest Answers\",\r\n  \"House Rules\",\r\n  \"Job Postings\",\r\n  \"Limericks\",\r\n  \"Lipstick & Eye Shadow\",\r\n  \"Lush Tropical Greenery\",\r\n  \"Minor Adjustments\",\r\n  \"Mixed Emotions\",\r\n  \"Moisturizing Towelettes\",\r\n  \"Morning Stretches\",\r\n  \"Motorcycle Boots\",\r\n  \"Motorcycles\",\r\n  \"News Weather & Sports\",\r\n  \"Outdoor Activities\",\r\n  \"Parking Restrictions\",\r\n  \"Party Favors\",\r\n  \"Personal Movie Collection\",\r\n  \"Plush Stuffed Animals\",\r\n  \"Preemptive Measures\",\r\n  \"Prom Dress & Tuxedo\",\r\n  \"Public Sector\",\r\n  \"Punctuation Marks\",\r\n  \"Relaxing Spa Services\",\r\n  \"Rose Petals\",\r\n  \"Rustling Autumn Leaves\",\r\n  \"Sample Questions\",\r\n  \"Science And Technology\",\r\n  \"Shearling- Lined Boots\",\r\n  \"Shocks & Struts\",\r\n  \"Spanish-Language Subtitles\",\r\n  \"Stylish Sunglasses\",\r\n  \"Subliminal Messages\",\r\n  \"Tacks & Pushpins\",\r\n  \"Tired And Aching Feet\",\r\n  \"Traditional Christmas Gifts\",\r\n  \"Unlimited Privileges\",\r\n  \"Warm Caribbean Breezes\",\r\n  \"Warmth & Compassion\",\r\n  \"Waves Rolling Onto The Shore\",\r\n  \"Wool Gloves\"\r\n];\r\n","import React, { useState, useEffect } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Puzzle from \"./components/Puzzle\";\nimport { things } from \"./words\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Lato'\n  }\n`;\n\nexport default function App() {\n  const [word, setWord] = useState(\"\");\n  useEffect(() => {\n    onNextWord();\n  }, []);\n\n  function onNextWord() {\n    setWord(things[Math.floor(Math.random() * things.length)]);\n  }\n\n  return (\n    <div>\n      <GlobalStyle />\n      <Puzzle word={word} nextWord={onNextWord} />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}